{"version":3,"file":"chart1-d287728ff02891122281.js","sources":["webpack:///webpack/bootstrap 7cfaa117a5c405f77985","webpack:///app/javascript/packs/chart1.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 191);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7cfaa117a5c405f77985","var ctx = document.getElementById(\"myChart\").getContext('2d');\nvar ctx1 = document.getElementById(\"myChart1\").getContext('2d');\nvar ctx2 = document.getElementById(\"doughnut\").getContext('2d');\nconsole.log(gon.step)\nvar myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n        labels: gon.step_date,\n        datasets: [{\n            label: 'steps',\n            data: gon.step,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1\n        },\n        {\n            label: 'distance',\n            data: gon.distance,\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1,\n        },\n        {\n            label: 'calories',\n            data: gon.calorie,\n            backgroundColor: 'rgba(255, 206, 86, 0.2)',\n            borderColor: 'rgba(255, 206, 86, 1)',\n            borderWidth: 1,\n        }]\n    },\n    options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n            yAxes: [{\n                display: true,\n                ticks: {\n                    suggestedMin: 0,    // minimum will be 0, unless there is a lower value.\n                    // OR //\n                    beginAtZero: true,   // minimum value will be 0.\n                    suggestedMax: 10\n                },\n                gridLines: {\n                    display: false\n                },\n                pointLabels: {\n                    fontFamily: \"'Source Sans Pro', sans-serif\"\n                }\n            }],\n            xAxes: [{\n                gridLines: {\n                    display: false\n                },\n                pointLabels: {\n                    fontFamily: \"'Source Sans Pro', sans-serif\"\n                }\n            }],\n        },\n        legend: {\n            labels: {\n                // This more specific font property overrides the global property\n                fontFamily: \"'Source Sans Pro', sans-serif\",\n            }\n        },\n        title: {\n            display: true,\n            fontFamily: \"'Source Sans Pro', sans-serif\",\n            text: 'Your activities in the last 7 days'\n        },\n        label: {\n        font: {\n            family: \"Source sans Pro\"\n        }\n    }\n    }\n});\n\nvar myChart1 = new Chart(ctx1, {\n    type: 'line',\n    data: {\n        labels: gon.step_date,\n        datasets: [{\n            label: 'steps',\n            data: gon.step,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            fill: false\n        },\n        {\n            label: 'distance',\n            data: gon.distance,\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1,\n            fill: false\n        },\n        {\n            label: 'calories',\n            data: gon.calorie,\n            backgroundColor: 'rgba(255, 206, 86, 0.2)',\n            borderColor: 'rgba(255, 206, 86, 1)',\n            borderWidth: 1,\n            fill: false\n        }]\n    },\n    options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n            yAxes: [{\n                display: true,\n                ticks: {\n                    suggestedMin: 0,    // minimum will be 0, unless there is a lower value.\n                    // OR //\n                    beginAtZero: true,   // minimum value will be 0.\n                    suggestedMax: 10\n                },\n                gridLines: {\n                    display: false\n                },\n                pointLabels: {\n                    fontFamily: \"'Source Sans Pro', sans-serif\"\n                }\n            }],\n            xAxes: [{\n                gridLines: {\n                    display: false\n                },\n                pointLabels: {\n                    fontFamily: \"'Source Sans Pro', sans-serif\"\n                }\n            }],\n        },\n        legend: {\n            labels: {\n                // This more specific font property overrides the global property\n                fontFamily: \"'Source Sans Pro', sans-serif\"\n            }\n        },\n        title: {\n            display: true,\n            fontFamily: \"'Source Sans Pro', sans-serif\",\n            text: 'Your activities in the last 7 days'\n        }\n    }\n});\nvar myChart = new Chart(ctx2, {\n    type: 'doughnut',\n    data: {\n        labels: [\n                'Red',\n                'Yellow',\n                'Blue'\n            ],\n        datasets: [{\n            label: 'steps',\n            data: gon.doughnut.first,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            fill: false\n        }],\n        },\n    options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n            yAxes: [{\n                display: true,\n                ticks: {\n                    suggestedMin: 0,    // minimum will be 0, unless there is a lower value.\n                    // OR //\n                    beginAtZero: true,   // minimum value will be 0.\n                    suggestedMax: 10\n                },\n                gridLines: {\n                    display: false\n                },\n                pointLabels: {\n                    fontFamily: \"'Source Sans Pro', sans-serif\"\n                }\n            }],\n            xAxes: [{\n                gridLines: {\n                    display: false\n                },\n                pointLabels: {\n                    fontFamily: \"'Source Sans Pro', sans-serif\"\n                }\n            }],\n        },\n        legend: {\n            labels: {\n                // This more specific font property overrides the global property\n                fontFamily: \"'Source Sans Pro', sans-serif\"\n            }\n        },\n        title: {\n            display: true,\n            fontFamily: \"'Source Sans Pro', sans-serif\",\n            text: 'Your activities in the last 7 days'\n        }\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// app/javascript/packs/chart1.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAhBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAhBA;AAyBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AADA;AAvCA;AA1BA;AACA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAlBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAhBA;AAyBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAHA;AAlCA;AA7BA;AAsEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAXA;AAeA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAhBA;AAyBA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAHA;AAlCA;AAjBA;;;;A","sourceRoot":""}